 // This file has been generated by Specta. DO NOT EDIT.

export type AppErrorIpc = { kind: string; message: string }

export type CopyRequest = { from: string[]; to: string; includes_hidden: boolean; strategy: CopyStrategy | null; includes_wrapping_dir: boolean }

export type CopyStrategy = "BreathFirst" | "DepthFirst"

export type CopyUiState = { left: DirActionPanel; right: DirActionPanel }

export type DirActionPanel = { 
/**
 * the full path of the current panel
 */
root_path: string; 
/**
 * this pointer will be use to keep track of current dir for both front-end
 * and back-end
 * TODO: travesal function that returns the DirItem
 */
current_pointer_path: string; show_hidden: boolean; items: DirItem[]; expanded_paths: string[]; selected_items: string[] }

export type DirItem = { path: string; short_path: string; is_folder: boolean; permissions: DirPermission | null }

export type DirPermission = { readable: boolean; writable: boolean; executable: boolean }

export type ListDirOut = { path: string; short_path: string; children: DirItem[] }

export type ListDirRequest = { path: string; show_hidden: boolean; side: Side }

export type SelectRequest = { side: Side; path: string; selected: boolean }

export type Side = "left" | "right"

export type TauRpcDataInputTypes = { proc_name: "get_state"; input_type: null }

export type TauRpcDataOutputTypes = { proc_name: "get_state"; output_type: CopyUiState }

export type TauRpcFileActionInputTypes = { proc_name: "copy"; input_type: { __taurpc_type: CopyRequest } } | { proc_name: "moves"; input_type: { __taurpc_type: CopyRequest } }

export type TauRpcFileActionOutputTypes = { proc_name: "copy"; output_type: null } | { proc_name: "moves"; output_type: null }

export type TauRpcUIActionInputTypes = { proc_name: "list_dir"; input_type: { __taurpc_type: ListDirRequest } } | { proc_name: "toggle_expand"; input_type: { __taurpc_type: ToggleExpandRequest } } | { proc_name: "toggle_hidden"; input_type: { __taurpc_type: ToggleHiddenRequest } } | { proc_name: "update_cursor_path"; input_type: { __taurpc_type: UpdatePathRequest } } | { proc_name: "forward"; input_type: { __taurpc_type: UpdatePathRequest } } | { proc_name: "back"; input_type: { __taurpc_type: Side } } | { proc_name: "select"; input_type: { __taurpc_type: SelectRequest } } | { proc_name: "swap_sides"; input_type: null }

export type TauRpcUIActionOutputTypes = { proc_name: "list_dir"; output_type: DirItem[] } | { proc_name: "toggle_expand"; output_type: CopyUiState } | { proc_name: "toggle_hidden"; output_type: CopyUiState } | { proc_name: "update_cursor_path"; output_type: CopyUiState } | { proc_name: "forward"; output_type: CopyUiState } | { proc_name: "back"; output_type: CopyUiState } | { proc_name: "select"; output_type: CopyUiState } | { proc_name: "swap_sides"; output_type: CopyUiState }

export type ToggleExpandRequest = { side: Side; folder_path: string; expanded: boolean }

export type ToggleHiddenRequest = { side: Side; to: boolean }

export type UpdatePathRequest = { side: Side; to: string }

const ARGS_MAP = {"data":"{\"get_state\":[]}","actions.file":"{\"copy\":[\"params\"],\"moves\":[\"params\"]}","actions.ui":"{\"list_dir\":[\"params\"],\"toggle_expand\":[\"params\"],\"forward\":[\"params\"],\"back\":[\"params\"],\"update_cursor_path\":[\"params\"],\"select\":[\"params\"],\"swap_sides\":[],\"toggle_hidden\":[\"params\"]}"}
import { createTauRPCProxy as createProxy } from "taurpc"

export const createTauRPCProxy = () => createProxy<Router>(ARGS_MAP)

type Router = {
	'data': [TauRpcDataInputTypes, TauRpcDataOutputTypes],
	'actions.ui': [TauRpcUIActionInputTypes, TauRpcUIActionOutputTypes],
	'actions.file': [TauRpcFileActionInputTypes, TauRpcFileActionOutputTypes],
}